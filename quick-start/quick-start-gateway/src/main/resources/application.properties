server.port=9527

spring.application.name=quick-start-gateway

# consul 配置
## 指定 consul 服务地址
spring.cloud.consul.host=192.168.0.100
spring.cloud.consul.port=8500
## 使用 IP 地址注册
spring.cloud.consul.discovery.prefer-ip-address=true

# 采样率，默认0.1（0.1表示10次只有一次被记录）
management.tracing.sampling.probability=1.0
# zipkin 地址
management.zipkin.tracing.endpoint=http://192.168.0.100:9411/api/v2/spans
# 日志记录格式（包括应用程序名称、TraceId、SpanId）
logging.pattern.level=${spring.application.name:},%X{traceId:-},%X{spanId:-}

# 网关配置
# 是否启用网关，默认为 true
spring.cloud.gateway.enabled=true
# 路由配置
# 路由 id，没有固定规则但是需要唯一，建议配置服务吗
spring.cloud.gateway.routes[0].id=quick-start-provider
# 匹配后提供者的服务路由地址
## 初次使用可以写死
#spring.cloud.gateway.routes[0].uri=http://localhost:8000
## lb:// 开头，表示使用服务名
spring.cloud.gateway.routes[0].uri=lb://quick-start-provider
# 匹配规则
# 谓词
spring.cloud.gateway.routes[0].predicates[0]=Path=/provider/**
# AfterRoutePredicateFactory 配置（这里表示配置的时间点之后才能访问）
spring.cloud.gateway.routes[0].predicates[1]=After=2024-10-06T21:55:00.0+08:00[Asia/Shanghai]
# BeforeRoutePredicateFactory 配置（这里表示配置的时间点之前才能访问）
spring.cloud.gateway.routes[0].predicates[2]=Before=2099-10-06T22:23:00.0+08:00[Asia/Shanghai]
# CookieRoutePredicateFactory 配置（匹配 Cookie 值）
spring.cloud.gateway.routes[0].predicates[3]=Cookie=username,admin
# 自定义谓词（full模式）
#spring.cloud.gateway.routes[0].predicates[4].name=UserLevel
#spring.cloud.gateway.routes[0].predicates[4].args.userLevel=10
# 自定义谓词（short模式）
spring.cloud.gateway.routes[0].predicates[4]=UserLevel=10
# 过滤器
# 移除第一个前缀
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1